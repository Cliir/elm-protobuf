-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: google/protobuf/timestamp.proto

module Google.Protobuf.Timestamp exposing (..)

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE


type alias Timestamp =
    { seconds : Int -- 1
    , nanos : Int -- 2
    }


timestampDecoder : JD.Decoder Timestamp
timestampDecoder =
    JD.lazy <| \_ -> decode Timestamp
        |> required "seconds" JD.int 0
        |> required "nanos" JD.int 0


timestampEncoder : Timestamp -> JE.Value
timestampEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "seconds" JE.int 0 v.seconds)
        , (requiredFieldEncoder "nanos" JE.int 0 v.nanos)
        ]
